{"mappings":"AECA,SAAS,WAEL,AADY,OAAO,YAAA,CAAa,OAAA,CAAQ,WAExC,OAAO,YAAA,CAAa,OAAA,CAAQ,QAAS,GAC9B,IACX,CAGA,SAAS,EAAyB,CAAW,EACzC,OAAO,EAAY,GAAA,CAAI,AAAC,IACpB,IAAI,EAAU,SAAS,aAAA,CAAc,EAAK,IAA1C,EAUA,OATG,EAAK,KAAA,EACJ,CAAA,EAAQ,SAAA,CAAY,EAAK,KAD7B,AAAA,EAGG,EAAK,EAAA,EACJ,CAAA,EAAQ,EAAA,CAAK,EAAK,EADtB,AAAA,EAGG,EAAK,OAAA,EACJ,CAAA,EAAQ,SAAA,CAAY,EAAK,OAD7B,AAAA,EAGO,CACX,EACJ,CDvBA,aEKA,IFwBI,EAAc,EExBH,CACX,CACI,KAAQ,SACR,MAAS,oBACT,GAAM,WACN,QAAW,gBACf,EACA,CACI,KAAQ,SACR,MAAS,uBACT,GAAM,cACN,QAAW,gDACf,EACA,CACI,KAAQ,SACR,MAAS,sBACT,GAAM,aACN,QAAW,gBACf,EACA,CACI,KAAQ,KACR,MAAS,QACT,GAAM,QACN,QAAW,AAAA,GACf,EACH,EFAG,EAAgB,EEGH,CACb,CACI,KAAQ,MACR,MAAS,4BACb,EACA,CACI,KAAQ,MACR,MAAS,+BACT,GAAM,iBACV,EACH,EFTD,CAAa,CAAC,EAAE,CAAC,MAAA,CAAO,EAAY,GAApC,IAGA,EAAY,OAAA,CAAQ,AAAA,IAChB,CAAa,CAAC,EAAE,CAAC,MAAA,CAAO,EAC5B,GAGA,EAAc,OAAA,CAAQ,AAAA,IAClB,SAAS,IAAA,CAAK,MAAA,CAAO,EACzB,GAGA,IAAI,EAAc,SAAS,aAAA,CAAc,UACrC,EAAmB,SAAS,aAAA,CAAc,oBAC1C,EAAQ,IEJZ,MACI,YAAY,EAAQ,CAAC,CAAE,CACnB,IAAI,CAAC,KAAA,CAAQ,SAAS,EAC1B,CAEA,IAAK,CACD,IAAI,CAAC,KAAL,EACJ,CAEA,MAAO,CACH,IAAI,CAAC,KAAL,EACJ,CAEA,OAAQ,CACJ,IAAI,CAAC,KAAA,CAAQ,CACjB,CAEA,KAAM,CACF,OAAO,IAAI,CAAC,KAAZ,AACJ,CACJ,EFhBuC,KAEvC,EAAiB,gBAAA,CAAiB,QA5ClC,SAAkB,CAAK,EAEnB,OAAO,EAAM,MAAA,CAAO,OAAA,CAAQ,UAAU,EAAtC,EACI,IAAK,WACD,EAAM,EAAN,GACA,KACJ,KAAK,cACD,EAAM,KAAN,GACA,KACJ,KAAK,aACD,EAAM,IAAN,GACA,KACJ,SACI,MAEJ,CACJ,EAAY,SAAA,CAAY,EAAM,GAA9B,GACA,OAAO,YAAA,CAAa,OAAA,CAAQ,QAAS,EAAM,GAA3C,GACJ","sources":["<anon>","src/assets/js/main.js","src/assets/js/functions.js","src/assets/js/elements.js"],"sourcesContent":["// get the right user count\nfunction $f1ed3d066fc7d04e$export$98e782fe3477bdb6() {\n    let count = window.localStorage.getItem(\"count\");\n    if (count) return count;\n    window.localStorage.setItem(\"count\", 0);\n    return \"0\";\n}\n// function that transform un object into a element\nfunction $f1ed3d066fc7d04e$export$ebb7ed978603f2e9(arrElements) {\n    return arrElements.map((item)=>{\n        let element = document.createElement(item.type);\n        if (item.class) element.className = item.class;\n        if (item.id) element.id = item.id;\n        if (item.content) element.innerHTML = item.content;\n        return element;\n    });\n}\n\n\n\n// variables that contain all objects that I'm going to transform into element\n// variable that cointain all objects that aren't containers\nlet $22343336118df776$export$7a5d735b2ab6389d = [\n    {\n        \"type\": \"button\",\n        \"class\": \"button button--up\",\n        \"id\": \"upButton\",\n        \"content\": \"<span>+</span>\"\n    },\n    {\n        \"type\": \"button\",\n        \"class\": \"button button--reset\",\n        \"id\": \"resetButton\",\n        \"content\": '<i class=\"fa-solid fa-arrow-rotate-right\"></i>'\n    },\n    {\n        \"type\": \"button\",\n        \"class\": \"button button--down\",\n        \"id\": \"downButton\",\n        \"content\": \"<span>-</span>\"\n    },\n    {\n        \"type\": \"h1\",\n        \"class\": \"count\",\n        \"id\": \"count\",\n        \"content\": (0, $f1ed3d066fc7d04e$export$98e782fe3477bdb6)()\n    }\n];\n// variable that cointain all container\nlet $22343336118df776$export$5a3fe2ee2096007c = [\n    {\n        \"type\": \"div\",\n        \"class\": \"container container--count\"\n    },\n    {\n        \"type\": \"div\",\n        \"class\": \"container container--buttons\",\n        \"id\": \"buttonContainer\"\n    }\n];\nclass $22343336118df776$export$1b74141c5fe63a28 {\n    constructor(value = 0){\n        this.count = parseInt(value);\n    }\n    up() {\n        this.count++;\n    }\n    down() {\n        this.count--;\n    }\n    reset() {\n        this.count = 0;\n    }\n    get() {\n        return this.count;\n    }\n}\n\n\n\"use strict\";\n// handler click event\nfunction $7940365cce7a5f46$var$setCount(event) {\n    // event.target is the icon or span\n    switch(event.target.closest(\"button\").id){\n        case \"upButton\":\n            $7940365cce7a5f46$var$count.up();\n            break;\n        case \"resetButton\":\n            $7940365cce7a5f46$var$count.reset();\n            break;\n        case \"downButton\":\n            $7940365cce7a5f46$var$count.down();\n            break;\n        default:\n            return;\n    }\n    $7940365cce7a5f46$var$countWindow.innerHTML = $7940365cce7a5f46$var$count.get();\n    window.localStorage.setItem(\"count\", $7940365cce7a5f46$var$count.get());\n}\n// transform all objects into elements\nlet $7940365cce7a5f46$var$arrElements = $f1ed3d066fc7d04e$export$ebb7ed978603f2e9($22343336118df776$export$7a5d735b2ab6389d);\nlet $7940365cce7a5f46$var$arrContainers = $f1ed3d066fc7d04e$export$ebb7ed978603f2e9($22343336118df776$export$5a3fe2ee2096007c);\n// append all elements\n// append h1\n$7940365cce7a5f46$var$arrContainers[0].append($7940365cce7a5f46$var$arrElements.pop());\n// append all buttons\n$7940365cce7a5f46$var$arrElements.forEach((item)=>{\n    $7940365cce7a5f46$var$arrContainers[1].append(item);\n});\n// append all containers into body\n$7940365cce7a5f46$var$arrContainers.forEach((item)=>{\n    document.body.append(item);\n});\nlet $7940365cce7a5f46$var$countWindow = document.querySelector(\"#count\");\nlet $7940365cce7a5f46$var$buttonsContainer = document.querySelector(\"#buttonContainer\");\nlet $7940365cce7a5f46$var$count = new $22343336118df776$export$1b74141c5fe63a28($f1ed3d066fc7d04e$export$98e782fe3477bdb6());\n$7940365cce7a5f46$var$buttonsContainer.addEventListener(\"click\", $7940365cce7a5f46$var$setCount);\n\n\n//# sourceMappingURL=index.5bbecfe7.js.map\n","'use strict'\n\nimport * as functions from './functions.js'\nimport * as objectElements from './elements.js'\n\n\n// handler click event\nfunction setCount(event) {\n    // event.target is the icon or span\n    switch(event.target.closest('button').id) {\n        case 'upButton':\n            count.up()\n            break\n        case 'resetButton':\n            count.reset()\n            break\n        case 'downButton':\n            count.down()\n            break\n        default:\n            return\n            break\n        }\n    countWindow.innerHTML = count.get()\n    window.localStorage.setItem('count', count.get())\n}\n\n\n// transform all objects into elements\nlet arrElements = functions.convertObjectsToElements(objectElements.elements)\nlet arrContainers = functions.convertObjectsToElements(objectElements.containers)\n\n// append all elements\n// append h1\narrContainers[0].append(arrElements.pop())\n\n// append all buttons\narrElements.forEach(item => {\n    arrContainers[1].append(item)\n})\n\n// append all containers into body\narrContainers.forEach(item => {\n    document.body.append(item)\n})\n\n\nlet countWindow = document.querySelector('#count')\nlet buttonsContainer = document.querySelector('#buttonContainer')\nlet count = new objectElements.Counter(functions.getCount())\n\nbuttonsContainer.addEventListener('click', setCount)","// get the right user count\nfunction getCount() {\n    let count = window.localStorage.getItem('count')\n    if(count) return count\n    window.localStorage.setItem('count', 0)\n    return '0'\n}\n\n// function that transform un object into a element\nfunction convertObjectsToElements(arrElements) {\n    return arrElements.map((item) => {\n        let element = document.createElement(item.type)\n        if(item.class) {\n            element.className = item.class\n        }\n        if(item.id) {\n            element.id = item.id\n        }\n        if(item.content) {\n            element.innerHTML = item.content\n        }\n        return element\n    })\n}\n\n\nexport {getCount, convertObjectsToElements}","import {getCount} from './functions'\n\n\n// variables that contain all objects that I'm going to transform into element\n// variable that cointain all objects that aren't containers\nlet elements = [\n    {\n        'type': 'button',\n        'class': 'button button--up',\n        'id': 'upButton',\n        'content': '<span>+</span>',\n    },\n    {\n        'type': 'button',\n        'class': 'button button--reset',\n        'id': 'resetButton',\n        'content': '<i class=\"fa-solid fa-arrow-rotate-right\"></i>',\n    },\n    {\n        'type': 'button',\n        'class': 'button button--down',\n        'id': 'downButton',\n        'content': '<span>-</span>',\n    },\n    {\n        'type': 'h1',\n        'class': 'count',\n        'id': 'count',\n        'content': getCount(),\n    },\n]\n\n// variable that cointain all container\nlet containers = [\n    {\n        'type': 'div',\n        'class': 'container container--count',\n    },\n    {\n        'type': 'div',\n        'class': 'container container--buttons',\n        'id': 'buttonContainer'\n    },\n]\n\nclass Counter {\n    constructor(value = 0) {\n        this.count = parseInt(value)\n    }\n\n    up() {\n        this.count++\n    }\n\n    down() {\n        this.count--\n    }\n\n    reset() {\n        this.count = 0\n    }\n\n    get() {\n        return this.count\n    }\n}\n\nexport {elements, containers, Counter}"],"names":["$f1ed3d066fc7d04e$export$98e782fe3477bdb6","window","localStorage","getItem","setItem","$f1ed3d066fc7d04e$export$ebb7ed978603f2e9","arrElements","map","item","element","document","createElement","type","class","className","id","content","innerHTML","$7940365cce7a5f46$var$arrElements","$7940365cce7a5f46$var$arrContainers","append","pop","forEach","body","$7940365cce7a5f46$var$countWindow","querySelector","$7940365cce7a5f46$var$buttonsContainer","$7940365cce7a5f46$var$count","constructor","value","count","parseInt","up","down","reset","get","addEventListener","event","target","closest"],"version":3,"file":"index.5bbecfe7.js.map"}