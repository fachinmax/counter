{"mappings":"ACCA,SAAS,EAAS,CAAK,EAEnB,OAAO,EAAM,MAAA,CAAO,OAAA,CAAQ,UAAU,EAAtC,EACI,IAAK,WACD,EAAM,EAAN,GACA,KACJ,KAAK,cACD,EAAM,KAAN,GACA,KACJ,KAAK,aACD,EAAM,IAAN,GACA,KACJ,SACI,MAEJ,CACJ,EAAY,SAAA,CAAY,EAAM,GAA9B,GACA,OAAO,YAAA,CAAa,OAAA,CAAQ,QAAS,EAAM,GAA3C,GACJ,CAyBA,IAAI,EAAc,SAAS,aAAA,CAAc,UACrC,EAAY,SAAS,aAAA,CAAc,oBACnC,EAAQ,IAzBZ,MACI,YAAY,EAAQ,CAAC,CAAE,CACnB,IAAI,CAAC,KAAA,CAAQ,SAAS,EAC1B,CAEA,IAAK,CACD,IAAI,CAAC,KAAL,EACJ,CAEA,MAAO,CACH,IAAI,CAAC,KAAL,EACJ,CAEA,OAAQ,CACJ,IAAI,CAAC,KAAA,CAAQ,CACjB,CAEA,KAAM,CACF,OAAO,IAAI,CAAC,KAAZ,AACJ,CACJ,EAKwB,OAAO,YAAA,CAAa,OAAA,CAAQ,UAEpD,EAAU,gBAAA,CAAiB,QAAS,GACpC,EAAU,gBAAA,CAAiB,WAAY","sources":["<anon>","src/assets/js/setEvent.js"],"sourcesContent":["// function\nfunction setCount(event) {\n    // event.target is the icon or span\n    switch(event.target.closest(\"button\").id){\n        case \"upButton\":\n            count.up();\n            break;\n        case \"resetButton\":\n            count.reset();\n            break;\n        case \"downButton\":\n            count.down();\n            break;\n        default:\n            return;\n    }\n    countWindow.innerHTML = count.get();\n    window.localStorage.setItem(\"count\", count.get());\n}\nclass Counter {\n    constructor(value = 0){\n        this.count = parseInt(value);\n    }\n    up() {\n        this.count++;\n    }\n    down() {\n        this.count--;\n    }\n    reset() {\n        this.count = 0;\n    }\n    get() {\n        return this.count;\n    }\n}\nlet countWindow = document.querySelector(\"#count\");\nlet container = document.querySelector(\"#buttonContainer\");\nlet count = new Counter(window.localStorage.getItem(\"count\"));\ncontainer.addEventListener(\"click\", setCount);\ncontainer.addEventListener(\"dblclick\", setCount);\n\n//# sourceMappingURL=index.cee44962.js.map\n","// function\nfunction setCount(event) {\n    // event.target is the icon or span\n    switch(event.target.closest('button').id) {\n        case 'upButton':\n            count.up()\n            break\n        case 'resetButton':\n            count.reset()\n            break\n        case 'downButton':\n            count.down()\n            break\n        default:\n            return\n            break\n        }\n    countWindow.innerHTML = count.get()\n    window.localStorage.setItem('count', count.get())\n}\n\nclass Counter {\n    constructor(value = 0) {\n        this.count = parseInt(value)\n    }\n\n    up() {\n        this.count++\n    }\n\n    down() {\n        this.count--\n    }\n\n    reset() {\n        this.count = 0\n    }\n\n    get() {\n        return this.count\n    }\n}\n\n\nlet countWindow = document.querySelector('#count')\nlet container = document.querySelector('#buttonContainer')\nlet count = new Counter(window.localStorage.getItem('count'))\n\ncontainer.addEventListener('click', setCount)\ncontainer.addEventListener('dblclick', setCount)"],"names":["setCount","event","target","closest","id","count","up","reset","down","countWindow","innerHTML","get","window","localStorage","setItem","document","querySelector","container","constructor","value","parseInt","getItem","addEventListener"],"version":3,"file":"index.cee44962.js.map"}